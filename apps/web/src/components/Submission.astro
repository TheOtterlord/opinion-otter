---
import type { __opinionotter__Submission, __opinionotter__Tag } from 'astro:db'

interface Props {
	submission: typeof __opinionotter__Submission.$inferSelect
	tags: (typeof __opinionotter__Tag.$inferSelect)[]
}

const { submission, tags } = Astro.props

const formatter = new Intl.RelativeTimeFormat(undefined, { style: 'narrow' })
const diff = Date.now() - submission.createdAt

const postedAt =
	Date.now() - 1000 * 60 * 60 * 24 * 3 > submission.createdAt
		? new Date(submission.createdAt).toDateString()
		: diff >= 1000 * 60 * 60 * 24
			? formatter.format(-Math.floor(diff / 1000 / 60 / 60 / 24), 'day')
			: diff >= 1000 * 60 * 60
				? formatter.format(-Math.floor(diff / 1000 / 60 / 60), 'hour')
				: diff >= 1000 * 60
					? formatter.format(-Math.floor(diff / 1000 / 60), 'minute')
					: formatter.format(-Math.floor(diff / 1000), 'second')
---

<astro-submission data-id={submission.id}>
	<div
		class="w-full bg-zinc-100/40 dark:bg-zinc-900 rounded p-4 border dark:border-zinc-700/50"
	>
		<div class="flex justify-between mb-4">
			<p
				class="px-3 py-1 rounded-2xl text-sm font-semibold bg-zinc-200 dark:bg-zinc-800 border dark:border-zinc-700/50"
			>
				{tags.find(t => t.slug === submission.tag)?.label}
			</p>
			<p>{postedAt}</p>
		</div>
		<p class="px-3">
			{submission.text}
		</p>
		<div class="flex justify-between">
			<div>
				<p class="px-3 pt-4">
					<a
						target="_blank"
						rel="nofollow"
						class="text-blue-600 dark:text-blue-400"
						href={submission.page}>{submission.page}</a
					>
					-
					{submission.email}
				</p>
			</div>
			<div class="flex justify-end gap-4 text-sm font-semibold">
				<button
					class="change-tag rounded-lg px-4 py-2 bg-white dark:bg-black border dark:border-zinc-700/50"
					>Change Tag</button
				>
        {
          submission.status === 'open' ? <button
            class="close rounded-lg px-4 py-2 bg-white dark:bg-black border dark:border-zinc-700/50"
            >Close</button> : (
              <button
                class="open rounded-lg px-4 py-2 bg-white dark:bg-black border dark:border-zinc-700/50"
              >Open</button>
              <button
                class="delete rounded-lg px-4 py-2 text-white bg-red-500 dark:bg-red-600"
              >Delete</button>
            )
        }
			</div>
		</div>
	</div>
</astro-submission>

<script>
  class AstroSubmission extends HTMLElement {
    changeTag = this.querySelector('.change-tag') as (HTMLButtonElement | null)
    close = this.querySelector('.close') as (HTMLButtonElement | null)
    delete = this.querySelector('.delete') as (HTMLButtonElement | null)
    open = this.querySelector('.open') as (HTMLButtonElement | null)

    constructor() {
      super()

      this.changeTag?.addEventListener('click', async () => {})

      this.close?.addEventListener('click', async () => {
        await fetch('/app/submit/', {
          method: 'PATCH',
          body: JSON.stringify({
            id: this.dataset.id,
            status: 'closed'
          })
        })

        window.location.reload()
      })

      this.delete?.addEventListener('click', async () => {
        await fetch('/app/submit/', {
          method: 'DELETE',
          body: JSON.stringify({ id: this.dataset.id })
        })

        window.location.reload()
      })

      this.open?.addEventListener('click', async () => {
        await fetch('/app/submit/', {
          method: 'PATCH',
          body: JSON.stringify({
            id: this.dataset.id,
            status: 'open'
          })
        })

        window.location.reload()
      })
    }
  }

  customElements.define('astro-submission', AstroSubmission)
</script>
